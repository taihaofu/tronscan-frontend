{"version":3,"sources":["components/tools/TransactionViewer/AddSignatureModal.js"],"names":["AddSignatureModal","hideModal","onClose","props","signWithQRCode","setState","body","onCodeScan","code","state","transaction","width","height","React","Component","mapStateToProps","account","app","mapDispatchToProps"],"mappings":";;;;;;ujBAAA,wCACA,kC,2CACA,wCACA,uC,+CACA,qC,i7BAEMA,kB,0EAEJ,4BAAc,6KAQdC,SARc,CAQF,UAAM,IACXC,QADW,CACA,MAAKC,KADL,CACXD,OADW,CAGhBA,SAAWA,SAAX,CACD,CAZa,OA6BdE,cA7Bc,CA6BG,UAAM,CACrB,MAAKC,QAAL,CAAc,CACZC,KACI,yCACE,8BAAC,iBAAD,EAAS,OAAQ,MAAKC,UAAtB,EADF,CAFQ,CAAd,EAOD,CArCa,OAuCdA,UAvCc,CAuCD,cAAY,IAAVC,KAAU,MAAVA,IAAU,CACvB,MAAKH,QAAL,CAAc,CACZC,KACI,yCACE,wCAAKE,IAAL,CADF,CAFQ,CAAd,EAOD,CA/Ca,CAGZ,MAAKC,KAAL,CAAa,CACXH,KAAM,IADK,CAAb,CAHY,aAMb,C,2FAQmB,IACbI,YADa,CACE,KAAKP,KADP,CACbO,WADa,CAGlB,KAAKL,QAAL,CAAc,CACZC,KACI,qCAAK,UAAU,aAAf,EACE,8BAAC,gBAAD,EAAQ,KAAM,GAAd,CAAmB,MAAO,CAACK,MAAO,MAAR,CAAgBC,OAAQ,MAAxB,CAA1B,CAA2D,MAAOF,WAAlE,EADF,CACkF,wCADlF,CAEE,wCAAQ,UAAU,iBAAlB,CAAoC,QAAS,KAAKN,cAAlD,sBAFF,CAFQ,CAAd,EAUD,C,uCAsBQ,IAEFE,KAFE,CAEM,KAAKG,KAFX,CAEFH,IAFE,IAGFI,YAHE,CAGa,KAAKP,KAHlB,CAGFO,WAHE,CAKP,MACI,+BAAC,iBAAD,EAAO,OAAQ,IAAf,CAAqB,OAAQ,KAAKT,SAAlC,CAA6C,KAAM,KAAnD,CAA0D,UAAU,uBAApE,EACE,8BAAC,uBAAD,EAAa,UAAU,aAAvB,CAAqC,OAAQ,KAAKA,SAAlD,qBADF,CAEE,8BAAC,qBAAD,MACGK,IADH,CAFF,CADJ,CAQD,C,+BAhE6BO,gBAAMC,S,EAmEtC,QAASC,gBAAT,CAAyBN,KAAzB,CAAgC,CAC9B,MAAO,CACLO,QAASP,MAAMQ,GAAN,CAAUD,OADd,CAAP,CAGD,CAED,GAAME,oBAAqB,EAA3B,C,gBAEe,wBAAQH,eAAR,CAAyBG,kBAAzB,EAA6ClB,iBAA7C,C","file":"static/js/AddSignatureModal.4c80e42a.chunk.js","sourcesContent":["import {connect} from \"react-redux\";\nimport React from \"react\";\nimport {Modal, ModalBody, ModalHeader} from \"reactstrap\";\nimport Scanner from \"./Scanner\";\nimport QRCode from \"qrcode.react\";\n\nclass AddSignatureModal extends React.Component {\n\n  constructor() {\n    super();\n\n    this.state = {\n      body: null,\n    }\n  }\n\n  hideModal = () => {\n    let {onClose} = this.props;\n\n    onClose && onClose();\n  };\n\n  componentDidMount() {\n    let {transaction} = this.props;\n\n    this.setState({\n      body: (\n          <div className=\"text-center\">\n            <QRCode size={512} style={{width: '100%', height: 'auto'}} value={transaction}/><br/>\n            <button className=\"btn btn-primary\" onClick={this.signWithQRCode}>\n              Sign with QR Code\n            </button>\n          </div>\n      )\n    });\n  }\n\n  signWithQRCode = () => {\n    this.setState({\n      body: (\n          <div>\n            <Scanner onScan={this.onCodeScan}/>\n          </div>\n      )\n    });\n  };\n\n  onCodeScan = ({code}) => {\n    this.setState({\n      body: (\n          <div>\n            <h1>{code}</h1>\n          </div>\n      )\n    });\n  };\n\n  render() {\n\n    let {body} = this.state;\n    let {transaction} = this.props;\n\n    return (\n        <Modal isOpen={true} toggle={this.hideModal} fade={false} className=\"modal-dialog-centered\">\n          <ModalHeader className=\"text-center\" toggle={this.hideModal}>Sign Transaction</ModalHeader>\n          <ModalBody>\n            {body}\n          </ModalBody>\n        </Modal>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    account: state.app.account,\n  };\n}\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddSignatureModal);\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/tools/TransactionViewer/AddSignatureModal.js"],"sourceRoot":""}