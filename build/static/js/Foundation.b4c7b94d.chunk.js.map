{"version":3,"sources":["components/Foundation.js"],"names":["Accounts","loadAccounts","page","pageSize","compare","property","obj1","obj2","setState","loading","Client","getlistdonators","list","random","Math","xhr","get","API_URL","data","getFundsSupply","funds","sort","foundationAddress","item","address","isPlan","accounts","total","fundSumBalance","ONE_TRX","tronicsPlanTRX","donateBalance","foundationTRX","fundTrx","planAddress","state","searchString","key","prevS","props","open","intl","tableInfo","formatMessage","id","column","title","dataIndex","width","align","render","text","record","index","color","marginTop","marginRight","length","background","left","locale","pagination","current","position","showSizeChanger","defaultPageSize","match","renderAccounts","Component","mapStateToProps","app","mapDispatchToProps"],"mappings":"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","file":"static/js/Foundation.b4c7b94d.chunk.js","sourcesContent":["import React, {Component, Fragment} from 'react';\nimport {connect} from \"react-redux\";\nimport {loadAccounts} from \"../actions/app\";\nimport {tu} from \"../utils/i18n\";\nimport {FormattedNumber, injectIntl} from \"react-intl\";\nimport {filter} from \"lodash\";\nimport {AddressLink} from \"./common/Links\";\nimport {TronLoader} from \"./common/loaders\";\nimport {Table, Input, Button, Icon} from 'antd';\nimport xhr from \"axios/index\";\nimport {trim} from \"lodash\";\nimport {Tooltip} from \"reactstrap\";\nimport {TRXPrice} from \"./common/Price\";\nimport {ONE_TRX,API_URL} from \"../constants\";\nimport {Client} from \"../services/api\";\n\nclass Accounts extends Component {\n\n  constructor() {\n    super();\n\n    this.state = {\n      loading: true,\n      searchString: \"\",\n      accounts: [],\n      total: 1000,\n      tronicsPlanTRX:0,\n      foundationTRX:0,\n    }\n  }\n\n  componentDidMount() {\n    this.loadAccounts();\n  }\n  handleHover(key) {\n    this.setState((prevS,props)=>({\n        [key]: !prevS[key]\n    }));\n  }\n  loadAccounts = async (page = 1, pageSize = 20) => {\n    this.setState({loading: true});\n    const {list} = await Client.getlistdonators();\n    let random = Math.random();\n    let data = await xhr.get(`${API_URL}/api/fund?random=\"${random}&page_index=${page}&per_page=${pageSize}`);\n    const {funds} = await Client.getFundsSupply();\n    function compare(property) {\n        return function (obj1, obj2) {\n\n            if (obj1[property] > obj2[property]) {\n                return 1;\n            } else if (obj1[property] < obj2[property]) {\n                return -1;\n            } else {\n                return 0;\n            }\n\n        }\n    }\n    data.data.data.data.sort(compare('key'));\n    let foundationAddress  = data.data.data.data;\n    for(let item in foundationAddress){\n        for(let address in list){\n            if(foundationAddress[item].address === list[address]){\n                foundationAddress[item].isPlan= true;\n            }\n        }\n    }\n\n    this.setState({\n        loading: false,\n        accounts: foundationAddress,\n        total: funds.fundSumBalance / ONE_TRX ,\n        tronicsPlanTRX:funds.donateBalance / ONE_TRX,\n        foundationTRX:funds.fundTrx,\n        planAddress:list\n    });\n\n\n  };\n\n  componentDidUpdate() {\n  }\n\n\n  renderAccounts() {\n    let {accounts, total, loadAccounts,open} = this.state;\n    let {intl} = this.props;\n    let tableInfo = intl.formatMessage({id: 'view_total'}) + ' 1000 ' + intl.formatMessage({id: 'address_unit'})\n    let column = [\n      {\n        title: '#',\n        dataIndex: 'key',\n        key: 'key',\n        width: 100,\n        align: 'left',\n        //className: 'ant_table ant_table_plan',\n        // rowClassName: (record,index) => {\n        //     return (\n        //         record.isPlan?  'ant_table_plan' :'ant_table'\n        //     )\n        // }\n      },\n      {\n        title: intl.formatMessage({id: 'address'}),\n        dataIndex: 'address',\n        key: 'address',\n        align: 'left',\n        render: (text, record, index) => {\n          return (\n              record.isPlan?  <div><div className=\"d-flex\"\n                                        style={{width:300}}\n                                        id={\"Tronics-Support-Plan_\"+record.key}\n                                        onMouseOver={(prevS,props) => this.setState({[record.key]: true})}\n                                        onMouseOut={() => this.setState({[record.key]: false})}>\n                                        <i className=\"fas fa-heart\" style={{color:'#C23631', marginTop:3,marginRight:5}}></i>\n                                        <AddressLink address={text} truncate={false}/>\n                                    </div>\n                                    <Tooltip placement=\"top\" target={\"Tronics-Support-Plan_\"+record.key} isOpen={this.state[record.key]}> <span className=\"text-capitalize\">{tu(\"tronics_support_plan_recipient_address\")}</span></Tooltip>\n                              </div>:<AddressLink address={text}/>\n          )\n        }\n\n\n\n      },\n      {\n        title: intl.formatMessage({id: 'balance'}),\n        dataIndex: 'balance',\n        key: 'balance',\n        width: 200,\n        align: 'right',\n        render: (text, record, index) => {\n          return <TRXPrice amount={text / ONE_TRX}/>\n        }\n      }\n    ];\n    return (\n        <div className=\"token_black\">\n          {\n            accounts.length === 0 ?\n                <div className=\"card\" style={{background: 'white'}}>\n                  <TronLoader>\n                    {tu(\"loading\")}\n                  </TronLoader>\n                </div>\n                :\n                <div className=\"card table_pos\">\n                  {total ? <div className=\"table_pos_info d-none d-md-block\" style={{left: 'auto'}}>{tableInfo} &nbsp;&nbsp;\n                    <a href={intl.locale == 'zh'?\"https://tron.network/donation?lng=zh\":\"https://tron.network/donation?lng=en\"} target=\"_blank\" style={{color:'#C23631'}}>{tu('tronics_support_plan')}></a></div> : ''}\n                    <Table bordered={true} columns={column} dataSource={accounts} rowClassName={(record, index) => { return  record.isPlan ?  'ant_table_plan' :'' }}\n                           onChange={(pagination) => {\n                               this.loadAccounts(pagination.current, pagination.pageSize)\n                           }}\n                           pagination={{position: 'both', showSizeChanger: true,defaultPageSize:20, total:1000 }}/>\n                </div>\n          }\n        </div>\n    )\n  }\n\n  render() {\n\n    let {match,intl} = this.props;\n    let {total, tronicsPlanTRX,foundationTRX,loading,planAddress} = this.state;\n    return (\n        <main className=\"container header-overlap pb-3 token_black\">\n          <div className=\"row foundation_title\">\n\n            <div className=\"col-md-3 mt-3 mt-md-0 pr-0\">\n              <div className=\"card h-100 widget-icon\">\n                <div className=\"card-body pl-4 bg-image_book\">\n                  <h3>\n                    <FormattedNumber value={total}/>\n                  </h3>\n                  {tu(\"total_number_frozenTRX\")}\n                </div>\n              </div>\n            </div>\n\n            <div className=\"col-md-3 mt-3 mt-md-0 position-relative pr-0\">\n                <a href={intl.locale == 'zh'?\"https://tron.network/donation?lng=zh\":\"https://tron.network/donation?lng=en\"} target=\"_blank\" className=\"tronics_plan_link\">\n                    <div className=\"card h-100 widget-icon\">\n                        <div className=\"card-body pl-4\">\n                            <h3>\n                                <span className=\"tronics_plan_title\">\n                                    <FormattedNumber value={tronicsPlanTRX}/>\n                                </span>\n                            </h3>\n                            <span className=\"tronics_plan_dec\">\n                                {tu(\"tronics_support_planTRX\")}\n                            </span>\n                        </div>\n                    </div>\n                </a>\n            </div>\n            <div className=\"col-md-3 mt-3 mt-md-0 pr-0\">\n              <div className=\"card h-100 widget-icon\">\n                <div className=\"card-body pl-4 bg-image_home\" >\n                  <h3>\n                    <FormattedNumber value={foundationTRX}/>\n                  </h3>\n                  {tu(\"frozen_by_the_foundationTRX\")}\n                </div>\n              </div>\n            </div>\n            <div className=\"col-md-3 mt-3 mt-md-0\">\n              <div className=\"card h-100 widget-icon bg-line_green\">\n                <div className=\"card-body pl-4 bg-image_frozen\">\n                  <h3>\n                    2020/01/01\n                  </h3>\n                  {tu(\"unfreeze_time\")}\n                </div>\n              </div>\n            </div>\n          </div>\n\n\n          <div className=\"row mt-2\">\n            <div className=\"col-md-12\">\n              <div className=\"mt-1\">\n                {this.renderAccounts()}\n              </div>\n            </div>\n          </div>\n        </main>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    accounts: state.app.accounts,\n  };\n}\n\nconst mapDispatchToProps = {\n  loadAccounts,\n};\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(injectIntl(Accounts))\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/Foundation.js"],"sourceRoot":""}