{"version":3,"sources":["components/tools/TronConvertTool.js"],"names":["TronConvertTool","props","state","loader","iframe","document","getElementById","_this","onload","setState","prevProps","prevState","justifyContent","width","height","minHeight","paddingTop","border","Component","mapStateToProps","mapDispatchToProps"],"mappings":";;;;;;ujBAAA,kC,2CACA,oCACA,kCACA,wCACA,mCACA,uCACA,qC,o4BAEMA,gB,4DAEJ,yBAAYC,KAAZ,CAAmB,gKACXA,KADW,GAGjB,OAAKC,KAAL,CAAa,CACXC,OAAQ,KADG,CAAb,CAHiB,cAMlB,C,yFAEmB,CAClB,GAAIC,QAASC,SAASC,cAAT,CAAwB,aAAxB,CAAb,CACA,GAAIC,OAAQ,IAAZ,CACAH,OAAOI,MAAP,CAAgB,UAAY,CAC1BD,MAAME,QAAN,CAAe,CACbN,OAAQ,IADK,CAAf,EAGD,CAJD,CAMD,C,8DAEkBO,S,CAAWC,S,CAAW,CAExC,C,mEAEsB,CAEtB,C,uCAEQ,CAEP,MACI,sCAAK,UAAU,0BAAf,EACE,qCAAK,UAAU,MAAf,EACE,qCAAK,UAAU,KAAf,CAAqB,MAAO,CAACC,eAAgB,QAAjB,CAA5B,EAEI,qCAAK,UAAW,KAAKV,KAAL,CAAWC,MAAX,CAAoB,yBAApB,CAAgD,gBAAhE,EACE,8BAAC,mBAAD,MADF,CAFJ,CAOI,qCAAK,UAAW,KAAKD,KAAL,CAAWC,MAAX,CAAoB,gBAApB,CAAuC,kBAAvD,CACK,MAAO,CAACU,MAAO,MAAR,CAAgBC,OAAQ,MAAxB,CAAgCC,UAAW,OAA3C,CAAoDC,WAAY,MAAhE,CAAwEC,OAAQ,CAAhF,CADZ,EAEE,wCAAQ,GAAG,aAAX,CACQ,MAAO,CAACJ,MAAO,MAAR,CAAgBC,OAAQ,MAAxB,CAAgCC,UAAW,OAA3C,CAAoDC,WAAY,MAAhE,CAAwEC,OAAQ,CAAhF,CADf,CAEQ,IAAI,uCAFZ,EAFF,CAPJ,CADF,CADF,CADJ,CAqBD,C,6BApD2BC,gB,EAuD9B,QAASC,gBAAT,CAAyBjB,KAAzB,CAAgC,CAC9B,MAAO,EAAP,CACD,CAED,GAAMkB,oBAAqB,EAA3B,C,gBAEe,wBAAQD,eAAR,CAAyBC,kBAAzB,EAA6CpB,eAA7C,C","file":"static/js/TronConvertTool.5128272b.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport {trim} from \"lodash\";\nimport {tu} from \"../../utils/i18n\";\nimport {connect} from \"react-redux\";\nimport {BlockNumberLink} from \"../common/Links\";\nimport {FormattedNumber} from \"react-intl\";\nimport {TronLoader} from \"../common/loaders\";\n\nclass TronConvertTool extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loader: false\n    };\n  }\n\n  componentDidMount() {\n    let iframe = document.getElementById(\"convertTool\");\n    let _this = this\n    iframe.onload = function () {\n      _this.setState({\n        loader: true\n      });\n    };\n\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n\n  }\n\n  componentWillUnmount() {\n\n  }\n\n  render() {\n\n    return (\n        <div className=\"container header-overlap\">\n          <div className=\"card\">\n            <div className=\"row\" style={{justifyContent: 'center'}}>\n              {\n                <div className={this.state.loader ? \"loader-hidden col-md-12\" : \"show col-md-12\"}>\n                  <TronLoader/>\n                </div>\n              }\n              {\n                <div className={this.state.loader ? \"show col-md-12\" : \"hidden col-md-12\"}\n                     style={{width: '100%', height: '100%', minHeight: '750px', paddingTop: '15px', border: 0}}>\n                  <iframe id=\"convertTool\"\n                          style={{width: '100%', height: '100%', minHeight: '750px', paddingTop: '15px', border: 0}}\n                          src=\"https://tronscan.org/TronConvertTool/\"></iframe>\n                </div>\n              }\n            </div>\n          </div>\n        </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {};\n}\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TronConvertTool)\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/tools/TronConvertTool.js"],"sourceRoot":""}