{"version":3,"sources":["components/common/Recaptcha.js"],"names":["propTypes","className","PropTypes","string","onloadCallbackName","elementID","onloadCallback","func","verifyCallback","expiredCallback","render","oneOf","sitekey","theme","type","verifyCallbackName","expiredCallbackName","size","tabindex","hl","badge","defaultProps","undefined","isReady","window","grecaptcha","readyCheck","Recaptcha","props","updateReadyState","setState","ready","clearInterval","renderGrecaptcha","widget","callback","reset","bind","state","setInterval","prevProps","prevState","execute","Component"],"mappings":"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","file":"static/js/Recaptcha.36f9d8d6.chunk.js","sourcesContent":["/* eslint-disable no-undef */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nconst propTypes = {\n  className: PropTypes.string,\n  onloadCallbackName: PropTypes.string,\n  elementID: PropTypes.string,\n  onloadCallback: PropTypes.func,\n  verifyCallback: PropTypes.func,\n  expiredCallback: PropTypes.func,\n  render: PropTypes.oneOf(['onload', 'explicit']),\n  sitekey: PropTypes.string,\n  theme: PropTypes.oneOf(['light', 'dark']),\n  type: PropTypes.string,\n  verifyCallbackName: PropTypes.string,\n  expiredCallbackName: PropTypes.string,\n  size: PropTypes.oneOf(['invisible', 'compact', 'normal']),\n  tabindex: PropTypes.string,\n  hl: PropTypes.string,\n  badge: PropTypes.oneOf(['bottomright', 'bottomleft', 'inline']),\n};\n\nconst defaultProps = {\n  elementID: 'g-recaptcha',\n  onloadCallback: undefined,\n  onloadCallbackName: 'onloadCallback',\n  verifyCallback: undefined,\n  verifyCallbackName: 'verifyCallback',\n  expiredCallback: undefined,\n  expiredCallbackName: 'expiredCallback',\n  render: 'onload',\n  theme: 'light',\n  type: 'image',\n  size: 'normal',\n  tabindex: '0',\n  hl: 'en',\n  badge: 'bottomright',\n};\n\nconst isReady = () => typeof window !== 'undefined'\n  && typeof window.grecaptcha !== 'undefined'\n  && typeof window.grecaptcha.render === 'function';\n\nlet readyCheck;\n\nexport default class Recaptcha extends Component {\n\n  constructor(props) {\n    super(props);\n    this.reset = this.reset.bind(this);\n    this.state = {\n      ready: isReady(),\n      widget: null,\n    };\n\n    if (!this.state.ready) {\n      readyCheck = setInterval(this.updateReadyState, 1000);\n    }\n  }\n\n  componentDidMount() {\n    if (this.state.ready) {\n      this.renderGrecaptcha();\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { render, onloadCallback } = this.props;\n\n    if (render === 'explicit' && onloadCallback && this.state.ready && !prevState.ready) {\n      this.renderGrecaptcha();\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(readyCheck);\n  }\n\n  reset() {\n    const { ready, widget } = this.state;\n    if (ready && widget !== null) {\n      grecaptcha.reset(widget);\n    }\n  }\n\n  execute() {\n    const { ready, widget } = this.state;\n    if (ready && widget !== null) {\n      grecaptcha.execute(widget);\n    }\n  }\n\n  updateReadyState = () => {\n    if (isReady()) {\n      this.setState({\n        ready: true,\n      });\n\n      clearInterval(readyCheck);\n    }\n  }\n\n  renderGrecaptcha = () => {\n    this.setState({\n      widget: grecaptcha.render(this.props.elementID, {\n          sitekey: this.props.sitekey,\n          callback: this.props.verifyCallback || undefined,\n          theme: this.props.theme,\n          type: this.props.type,\n          size: this.props.size,\n          tabindex: this.props.tabindex,\n          hl: this.props.hl,\n          badge: this.props.badge,\n          'expired-callback': this.props.expiredCallback || undefined,\n      })\n    });\n\n    if (this.props.onloadCallback) {\n      this.props.onloadCallback();\n    }\n  }\n\n  render() {\n    if (this.props.render === 'explicit' && this.props.onloadCallback) {\n      return (\n        <div id={this.props.elementID}\n             data-onloadcallbackname={this.props.onloadCallbackName}\n             data-verifycallbackname={this.props.verifyCallbackName}\n        />\n      );\n    }\n\n    return (\n      <div id={this.props.elementID}\n           data-sitekey={this.props.sitekey}\n           data-theme={this.props.theme}\n           data-type={this.props.type}\n           data-size={this.props.size}\n           data-badge={this.props.badge}\n           data-tabindex={this.props.tabindex}\n      />\n    );\n  }\n}\n\nRecaptcha.propTypes = propTypes;\nRecaptcha.defaultProps = defaultProps;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/common/Recaptcha.js"],"sourceRoot":""}